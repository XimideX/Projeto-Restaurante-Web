-- MySQL Script generated by MySQL Workbench
-- Wed May 13 19:24:32 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema app_restaurante
-- -----------------------------------------------------
-- Database for restaurant app.

-- -----------------------------------------------------
-- Schema app_restaurante
--
-- Database for restaurant app.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `app_restaurante` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `app_restaurante` ;

-- -----------------------------------------------------
-- Table `app_restaurante`.`tipo_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`tipo_usuario` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`tipo_usuario` (
  `id_tipo_usuario` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`usuario` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  `sobrenome` VARCHAR(100) NULL,
  `email` VARCHAR(45) NOT NULL,
  `nome_usuario` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `cpf` INT NOT NULL,
  `tipo_usuario` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_tipo_usuario1_idx` (`tipo_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_tipo_usuario`
    FOREIGN KEY (`tipo_usuario`)
    REFERENCES `app_restaurante`.`tipo_usuario` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`endereco` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`endereco` (
  `id_endereco` INT NOT NULL AUTO_INCREMENT,
  `rua` VARCHAR(100) NOT NULL,
  `numero` INT NOT NULL,
  `bairro` VARCHAR(45) NOT NULL,
  `complemento` VARCHAR(150) NULL,
  `cidade` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `cep` INT NOT NULL,
  PRIMARY KEY (`id_endereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`tipo_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`tipo_produto` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`tipo_produto` (
  `id_tipo_produto` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`produto` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`produto` (
  `id_produto` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL,
  `preco` FLOAT NULL,
  `tipo` INT NOT NULL,
  PRIMARY KEY (`id_produto`),
  INDEX `fk_produto_tipo_produto_idx` (`tipo` ASC) VISIBLE,
  CONSTRAINT `fk_produto_tipo_produto`
    FOREIGN KEY (`tipo`)
    REFERENCES `app_restaurante`.`tipo_produto` (`id_tipo_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`restaurante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`restaurante` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`restaurante` (
  `id_restaurante` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `endereco` INT NOT NULL,
  `media_nota_geral` FLOAT NULL,
  `quantidade_acessos` INT NULL,
  PRIMARY KEY (`id_restaurante`),
  INDEX `fk_restaurante_endereco1_idx` (`endereco` ASC) VISIBLE,
  CONSTRAINT `fk_restaurante_endereco`
    FOREIGN KEY (`endereco`)
    REFERENCES `app_restaurante`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`restaurante_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`restaurante_produto` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`restaurante_produto` (
  `id_restaurante_produto` INT NOT NULL AUTO_INCREMENT,
  `id_restaurante` INT NOT NULL,
  `id_produto` INT NOT NULL,
  PRIMARY KEY (`id_restaurante_produto`, `id_restaurante`, `id_produto`),
  INDEX `fk_restaurante_has_produto_produto1_idx` (`id_produto` ASC) VISIBLE,
  INDEX `fk_restaurante_has_produto_restaurante1_idx` (`id_restaurante` ASC) VISIBLE,
  CONSTRAINT `fk_restaurante_produto_restaurante`
    FOREIGN KEY (`id_restaurante`)
    REFERENCES `app_restaurante`.`restaurante` (`id_restaurante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restaurante_produto_produto`
    FOREIGN KEY (`id_produto`)
    REFERENCES `app_restaurante`.`produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`usuario_restaurante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`usuario_restaurante` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`usuario_restaurante` (
  `id_usuario_restaurante` INT NOT NULL AUTO_INCREMENT,
  `id_usuario` INT NOT NULL,
  `id_restaurante` INT NOT NULL,
  `nota` FLOAT NOT NULL,
  PRIMARY KEY (`id_usuario_restaurante`, `id_usuario`, `id_restaurante`),
  INDEX `fk_usuario_has_restaurante_restaurante1_idx` (`id_restaurante` ASC) VISIBLE,
  INDEX `fk_usuario_has_restaurante_usuario1_idx` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_has_restaurante_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `app_restaurante`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_restaurante_restaurante1`
    FOREIGN KEY (`id_restaurante`)
    REFERENCES `app_restaurante`.`restaurante` (`id_restaurante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`categoria_restaurante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`categoria_restaurante` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`categoria_restaurante` (
  `id_categoria_restaurante` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_categoria_restaurante`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `app_restaurante`.`restaurante_categoria_restaurante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `app_restaurante`.`restaurante_categoria_restaurante` ;

CREATE TABLE IF NOT EXISTS `app_restaurante`.`restaurante_categoria_restaurante` (
  `id_restaurante_categoria_restaurante` INT NOT NULL AUTO_INCREMENT,
  `id_restaurante` INT NOT NULL,
  `id_categoria_restaurante` INT NOT NULL,
  PRIMARY KEY (`id_restaurante_categoria_restaurante`, `id_restaurante`, `id_categoria_restaurante`),
  INDEX `fk_restaurante_has_categoria_restaurante_categoria_restaura_idx` (`id_categoria_restaurante` ASC) VISIBLE,
  INDEX `fk_restaurante_has_categoria_restaurante_restaurante1_idx` (`id_restaurante` ASC) VISIBLE,
  CONSTRAINT `fk_restaurante_categoria_restaurante_restaurante`
    FOREIGN KEY (`id_restaurante`)
    REFERENCES `app_restaurante`.`restaurante` (`id_restaurante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restaurante_categoria_restaurante_categoria_restaurante`
    FOREIGN KEY (`id_categoria_restaurante`)
    REFERENCES `app_restaurante`.`categoria_restaurante` (`id_categoria_restaurante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
